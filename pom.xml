<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.gsitm</groupId>
  <artifactId>spring-batch-examples</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <name>spring-batch-examples</name>
  <url>http://www.gsitm.com</url>
  
  <!--
  properties는 일반적인 Java의 properties와 동일한 역할을 한다.
  properties element 내에 자유롭게 xml형태로 태그를 만들고
  maven내에 ${springframework.version} 형태로 접근하여 사용할 수 있다.
  -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>1.8</jdk.version>

    <!-- spring -->
    <springframework.version>3.2.10.RELEASE</springframework.version>
    <springframework.batch.version>2.1.9.RELEASE</springframework.batch.version>
    
    <!-- mybatis -->
    <mybatis.version>3.3.0</mybatis.version>
    <mybatis.spring.version>1.2.3</mybatis.spring.version>
    
    <!-- logging location -->
    <log.dir>${basedir}/logs</log.dir>
  </properties>
  
  <!--
  profile은 개발, 스테이징, 운영과 같이 build가 구분되어
  서로 다른 리소스, 의존성, property 등의 서로 달라질 때 각각의 환경 별로
  profile을 등록하여 관리할 수 있다.
  -->
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <env>dev</env>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    
    <profile>
      <id>prod</id>
      <properties>
        <env>prod</env>
      </properties>
    </profile>
  </profiles>
  
  <!--
  프로젝트의 필요로하는 라이브러리 의존성을 관리
  -->
  <dependencies>
    <!-- spring core -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${springframework.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>       
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${springframework.version}</version>
    </dependency>
    
    <!-- spring jdbc, for database -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${springframework.version}</version>
    </dependency>
    
    <!-- spring batch dependencies -->
    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-core</artifactId>
      <version>${springframework.batch.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.batch</groupId>
      <artifactId>spring-batch-infrastructure</artifactId>
      <version>${springframework.batch.version}</version>
    </dependency>

    <!-- jdbc -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.191</version>
    </dependency>   
  
    <!-- logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.6</version>
    </dependency>
    <dependency>                                   
      <groupId>org.slf4j</groupId>               
      <artifactId>jcl-over-slf4j</artifactId>    
      <version>1.7.19</version> 
    </dependency>

    <!-- etc -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>
  </dependencies>
  
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>src/main/resources/properties/${env}/db.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.springframework.batch.core.launch.support.CommandLineJobRunner</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>